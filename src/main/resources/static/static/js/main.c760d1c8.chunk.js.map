{"version":3,"sources":["component/interfaces/spinner/Spinner.js","component/interfaces/Interfaces.js","component/eachinterface/filter/Layer.js","component/eachinterface/filter/Protocol.js","component/eachinterface/filter/IpAddress.js","component/eachinterface/filter/PortNumber.js","component/eachinterface/filter/CustomizedButton.js","component/eachinterface/filter/Filters.js","component/eachinterface/packetstable/ModalLayer.js","component/eachinterface/packetstable/InformationBox.js","component/eachinterface/packetstable/PacketsTable.js","component/eachinterface/EachInterface.js","component/page/Page.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","modal","position","zIndex","paddingTop","left","top","width","height","overflow","backgroundColor","alignItems","Spinner","classes","className","root","maxWidth","palette","background","paper","margin","nested","paddingLeft","spacing","Interfaces","props","React","useState","interfaces","setInterfaces","loading","setLoading","useEffect","axios","get","then","res","data","handleClick","name","post","status","history","push","List","component","aria-labelledby","subheader","ListSubheader","id","map","value","ListItem","button","onClick","bind","ListItemIcon","ListItemText","primary","layerContainer","borderBottom","layer","display","marginLeft","formGroup","justifyContent","marginRight","listItem","collapse","Layer","currentValue","setParentState","openLayer","setOpenLayer","toggleLayers","handleClickLayer","ev","key","target","textContent","Collapse","in","timeout","unmountOnExit","disablePadding","layers","protocol","protocolContainer","Protocol","openProtocol","setOpenProtocol","toggleProtocols","handleClickProtocol","protocols","ipAddressContainer","ipAddress","marginBottom","form","radioButtonContainer","CssTextField","withStyles","color","borderColor","TextField","createMuiTheme","overrides","MuiRadio","colorSecondary","MuiFormGroup","flexDirection","IpAddress","handleIpChanged","trim","ThemeProvider","RadioGroup","aria-label","ipVersion","onChange","FormControlLabel","control","Radio","label","noValidate","autoComplete","variant","sourceIp","type","destinationIp","portNumberContainer","portNumber","PortNumber","handlePortChange","sourcePort","destinationPort","buttonContainer","ColorButton","getContrastText","green","Button","CustomizedButton","applyFilterHandler","size","container","filterBy","padding","borderLeft","borderRight","borderRadius","Filters","openFilter","setOpenFilter","filters","setFilters","toggleFilters","handleFiltersChanged","filter","Box","boxShadow","closeIcon","direction","formControl","marginTop","minWidth","formControlLabel","Sender","borderTop","nested2","nested3","zero","box","flex","date","more","paragraph","textAlign","boxContainer","flexWrap","pre","whiteSpace","wordBreak","ModalLayer","handleClose","packet","fullWidth","openSender","setOpenSender","openReceiver","setOpenReceiver","openDescriptor","setOpenDescriptor","onClose","Dialog","open","style","fontSize","extraInfo","srcIp","srcMac","srcPort","dstIp","dstMac","dstPort","descriptor","count","minimumSize","maximumSize","averageSize","InformationBox","packets","length","sizeArray","min","max","avg","sum","forEach","item","Math","toFixed","PacketsTable","state","clickedItem","lastIndex","buffer","this","socket","SockJS","stompClient","Stomp","over","allowCredentials","connect","frame","setInterval","pushPackets","TIMEOUT","setState","subscribe","message","JSON","parse","body","BUFFER_MAX_SIZE","close","slice","filteredPackets","toString","TableContainer","tableContainer","Paper","Table","table","TableHead","TableRow","title","TableCell","align","TableBody","select","scope","blue","Component","StyledTable","cursor","Page","exact","path","EachInterface","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c760d1c8.chunk.js","sourcesContent":["import React from 'react';\nimport './Spinner.css';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n        modal: {\n            position: 'fixed',\n            zIndex: '1',\n            paddingTop: '310px',\n            left: '0',\n            top: '0',\n            width: '100%',\n            height: '100%',\n            overflow: 'auto',\n            backgroundColor: 'rgba(0,0,0,0.4)',\n            alignItems: \"center\"\n        }\n    })\n);\n\nexport default function Spinner() {\n    const classes = useStyles();\n    return (\n        <div className={classes.modal}>\n            <div>\n                <div className=\"Loader\">Loading...</div>\n                {/*<p>Some text in the Modal..</p>*/}\n            </div>\n        </div>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SendIcon from '@material-ui/icons/Send';\nimport axios from \"axios\";\nimport Spinner from \"./spinner/Spinner\";\n\nconst useStyles = makeStyles((theme) => ({\n        root: {\n            // width: '70%',\n            maxWidth: '70%',\n            backgroundColor: theme.palette.background.paper,\n            margin: \"auto\"\n        },\n        nested: {\n            paddingLeft: theme.spacing(4)\n        }\n    })\n);\n\nexport default function Interfaces(props) {\n    const classes = useStyles();\n    const [interfaces, setInterfaces] = React.useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        axios.get(\"/interface\")\n            .then(res => {\n                setInterfaces(res.data)\n                setLoading(false);\n            })\n    }, [])\n\n    const handleClick = (name) => {\n        setLoading(true);\n        axios.post(\n            \"/interface\",\n            {name: name}\n        ).then(res => {\n            setLoading(false);\n            if (res.status === 200) {\n                props.history.push(\"/EachInterface\");\n            }\n        })\n    };\n\n    return (\n        <div>\n            {loading ? <Spinner/> : null}\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                        Network Interfaces\n                    </ListSubheader>\n                }\n                className={classes.root}\n            >\n                {\n                    interfaces.map(value => {\n                        return (\n                            <ListItem key={value.id} button onClick={handleClick.bind(null, value.name)}>\n                                <ListItemIcon>\n                                    <SendIcon/>\n                                </ListItemIcon>\n                                <ListItemText primary={value.name}/>\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport LayersIcon from '@material-ui/icons/Layers';\n\nconst useStyles = makeStyles((theme) => ({\n        layerContainer: {\n            borderBottom: \"3px solid #66bb6a\",\n            width: \"inherit\"\n        },\n        layer: {\n            display: \"block\",\n            marginLeft: \"20px\"\n        },\n        formGroup: {\n            justifyContent: \"space-evenly\",\n            marginRight: \"15px\"\n        },\n        nested: {\n            paddingLeft: theme.spacing(4)\n        },\n        listItem: {\n            backgroundColor: '#f1f8e9'\n        },\n        collapse: {\n            backgroundColor: '#fafafa'\n        },\n        root: {\n            width: '90%',\n            // backgroundColor: theme.palette.background.paper,\n            backgroundColor: '#ffffff',\n            margin: \"auto\"\n        }\n    })\n);\n\nexport default function Layer({currentValue, setParentState}) {\n    const classes = useStyles();\n    const [openLayer, setOpenLayer] = React.useState(false);\n\n    const toggleLayers = () => {\n        setOpenLayer(!openLayer);\n    };\n\n    const handleClickLayer = (ev) => {\n        setParentState({\n            key: \"layer\",\n            value: ev.target.textContent\n        })\n        toggleLayers()\n    }\n\n    return (\n        <div className={classes.layerContainer}>\n            <p className={classes.layer}>Layer:</p>\n            <List className={classes.root}>\n                <ListItem className={classes.listItem} onClick={toggleLayers} button>\n                    <ListItemIcon>\n                        <LayersIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary={currentValue}/>\n                    {openLayer ? <ExpandLess/> : <ExpandMore/>}\n                </ListItem>\n                <Collapse className={classes.collapse} in={openLayer} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        {\n                            layers.map(value => (\n                                <ListItem className={classes.nested} key={value} onClick={handleClickLayer} button>\n                                    <ListItemIcon>\n                                        <StarBorder/>\n                                    </ListItemIcon>\n                                    <ListItemText primary={value}/>\n                                </ListItem>\n                            ))\n                        }\n                    </List>\n                </Collapse>\n            </List>\n        </div>\n    )\n}\n\nconst layers = [\n    \"All\",\n    \"Application\",\n    \"Network\"\n]\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ReceiptIcon from '@material-ui/icons/Receipt';\n\nconst useStyles = makeStyles((theme) => ({\n        protocol: {\n            display: \"block\",\n            marginLeft: \"20px\"\n        },\n        protocolContainer: {\n            borderBottom: \"3px solid #66bb6a\",\n            width: \"inherit\"\n        },\n        nested: {\n            paddingLeft: theme.spacing(4)\n        },\n        listItem: {\n            backgroundColor: '#f1f8e9'\n        },\n        collapse: {\n            backgroundColor: '#fafafa'\n        },\n        root: {\n            width: '90%',\n            backgroundColor: '#ffffff',\n            // backgroundColor: theme.palette.background.paper,\n            margin: \"auto\"\n        }\n    })\n);\n\nexport default function Protocol({currentValue, setParentState}) {\n    const classes = useStyles();\n    const [openProtocol, setOpenProtocol] = React.useState(false);\n\n    const toggleProtocols = () => {\n        setOpenProtocol(!openProtocol);\n    };\n\n    const handleClickProtocol = (ev) => {\n        setParentState({\n            key: \"protocol\",\n            value: ev.target.textContent\n        })\n        toggleProtocols()\n    }\n\n    return (\n        <div className={classes.protocolContainer}>\n            <p className={classes.protocol}>Protocol:</p>\n            <List className={classes.root}>\n                <ListItem className={classes.listItem} onClick={toggleProtocols} button>\n                    <ListItemIcon>\n                        <ReceiptIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary={currentValue}/>\n                    {openProtocol ? <ExpandLess/> : <ExpandMore/>}\n                </ListItem>\n                <Collapse className={classes.collapse} in={openProtocol} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        {\n                            protocols.map(value => (\n                                <ListItem className={classes.nested} key={value} onClick={handleClickProtocol} button>\n                                    <ListItemIcon>\n                                        <StarBorder/>\n                                    </ListItemIcon>\n                                    <ListItemText primary={value}/>\n                                </ListItem>\n                            ))\n                        }\n                    </List>\n                </Collapse>\n            </List>\n        </div>\n    )\n}\n\nconst protocols = [\n    \"All\",\n    \"TCP\",\n    \"UDP\",\n    \"ICMPv4\",\n    \"IGMP\",\n    \"ARP\"\n]\n","import React from \"react\";\nimport {createMuiTheme, makeStyles, ThemeProvider, withStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\n\nconst useStyles = makeStyles((theme) => ({\n        ipAddressContainer: {\n            borderBottom: \"3px solid #66bb6a\",\n            width: \"inherit\"\n        },\n        ipAddress: {\n            display: \"flex\",\n            marginLeft: \"20px\",\n            marginBottom: \"20px\"\n        },\n        form: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '25ch',\n                justifyContent: \"space-evenly\"\n            },\n            justifyContent: \"space-evenly\",\n            display: \"flex\"\n        },\n        radioButtonContainer: {\n            display: \"grid\",\n            marginLeft: \"30px\"\n        }\n    })\n);\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: '#1b5e20'\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: '#aed581'\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: '#9ccc65'\n            }\n        }\n    }\n})(TextField);\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiRadio: {\n            colorSecondary: {\n                '&.Mui-checked': {\n                    color: 'green'\n                }\n            }\n        },\n        MuiFormGroup: {\n            root: {\n                flexDirection: \"row\"\n            }\n        }\n    }\n});\n\nexport default function IpAddress({currentValue, setParentState}) {\n\n    const classes = useStyles();\n\n    const handleIpChanged = (ev) => {\n        setParentState({\n            key: ev.target.name,\n            value: ev.target.value.trim()\n        })\n    }\n\n    const handleIpVersionChanged = (ev) => {\n        setParentState({\n            key: ev.target.name,\n            value: +ev.target.value\n        })\n    }\n\n    return (\n        <div className={classes.ipAddressContainer}>\n            <div className={classes.ipAddress}>\n                <p>IP Address:</p>\n                <div className={classes.radioButtonContainer}>\n                    <ThemeProvider theme={theme}>\n                        <RadioGroup aria-label=\"IpVersion\" name=\"ipVersion\" value={currentValue.ipVersion}\n                                    onChange={handleIpVersionChanged}>\n                            <FormControlLabel value={4} control={<Radio/>} label=\"IPv4\"/>\n                            <FormControlLabel value={6} control={<Radio/>} label=\"IPv6\"/>\n                        </RadioGroup>\n                    </ThemeProvider>\n                </div>\n            </div>\n            <form className={classes.form} noValidate autoComplete=\"off\">\n                <CssTextField\n                    onChange={handleIpChanged}\n                    name=\"sourceIp\"\n                    variant=\"outlined\"\n                    label=\"Source IP\"\n                    value={currentValue.sourceIp}\n                    type='search'\n                />\n                <CssTextField\n                    onChange={handleIpChanged}\n                    name=\"destinationIp\"\n                    variant=\"outlined\"\n                    label=\"Destination IP\"\n                    value={currentValue.destinationIp}\n                    type='search'\n                />\n            </form>\n\n        </div>\n    )\n}\n","import React from \"react\";\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n        portNumberContainer: {\n            borderBottom: \"3px solid #66bb6a\",\n            width: \"inherit\"\n        },\n        portNumber: {\n            display: \"block\",\n            marginLeft: \"20px\"\n        },\n        form: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '25ch',\n                justifyContent: \"space-evenly\"\n            },\n            justifyContent: \"space-evenly\",\n            display: \"flex\"\n        }\n    })\n);\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: '#1b5e20',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: '#aed581',\n                // border: \"2px solid #4db6ac\",\n                // backgroundColor: 'white'\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: '#9ccc65',\n                // border: \"2px solid #4db6ac\"\n            }\n        }\n    }\n})(TextField);\n\nexport default function PortNumber({currentValue, setParentState}) {\n    const classes = useStyles();\n\n    const handlePortChange = (ev) => {\n        setParentState({\n            key: ev.target.name,\n            value: ev.target.value.trim()\n        })\n    }\n\n    return (\n        <div className={classes.portNumberContainer}>\n            <p className={classes.portNumber}>Port Number:</p>\n            <form className={classes.form} noValidate autoComplete=\"off\">\n                <CssTextField\n                    onChange={handlePortChange}\n                    name=\"sourcePort\"\n                    variant=\"outlined\"\n                    label=\"Source Port\"\n                    value={currentValue.sourcePort}\n                    type='search'\n                />\n                <CssTextField\n                    onChange={handlePortChange}\n                    name=\"destinationPort\"\n                    variant=\"outlined\"\n                    label=\"Destination Port\"\n                    value={currentValue.destinationPort}\n                    type='search'\n                />\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport {green} from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n        margin: {\n            margin: theme.spacing(1)\n        },\n        buttonContainer: {\n            margin: \"auto\"\n        }\n    })\n);\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText(green[500]),\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700]\n        }\n    }\n}))(Button);\n\nexport default function CustomizedButton({applyFilterHandler}) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.buttonContainer}>\n            <ColorButton\n                onClick={applyFilterHandler}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                className={classes.margin}>\n                Filter\n            </ColorButton>\n        </div>\n    )\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Layer from \"./Layer\";\nimport Protocol from \"./Protocol\";\nimport IpAddress from \"./IpAddress\";\nimport PortNumber from \"./PortNumber\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport CustomizedButton from \"./CustomizedButton\";\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n        container: {\n            maxWidth: '80%',\n            margin: \"auto\",\n            overflow: \"hidden\",\n        },\n        filterBy: {\n            padding: \"8px\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4)\n        },\n        listItem: {\n            borderLeft: \"5px solid #4caf50\",\n            borderRight: \"5px solid #4caf50\",\n            borderBottom: \"3px solid #4caf50\",\n            borderRadius: '5px',\n            backgroundColor: \"#f1f8e9\"\n            // backgroundColor: '#f1f8e9'\n        },\n        collapse: {\n            backgroundColor: '#ffffff',\n        },\n        root: {\n            width: '90%',\n            margin: \"auto\"\n        }\n    })\n);\n\nexport default function Filters({setParentState}) {\n    const classes = useStyles();\n    const [openFilter, setOpenFilter] = React.useState(false);\n    const [filters, setFilters] = React.useState({\n        layer: \"All\",\n        protocol: \"All\",\n        ipVersion: 4,\n        sourceIp: \"\",\n        destinationIp: \"\",\n        sourcePort: \"\",\n        destinationPort: \"\"\n    });\n\n    const toggleFilters = () => {\n        setOpenFilter(!openFilter);\n    };\n\n    const handleFiltersChanged = (filter) => {\n        setFilters({\n            ...filters,\n            [filter.key]: filter.value\n        })\n    }\n\n    const handleFiltersApplied = () => {\n        setParentState(filters)\n        toggleFilters()\n    }\n\n    return (\n        <div className={classes.container}>\n            <List className={classes.root}>\n                <Box boxShadow={3}>\n                    <ListItem className={classes.listItem} button onClick={toggleFilters}>\n                        <ListItemText className={classes.filterBy} primary=\"Filter By\"/>\n                        {openFilter ? <ExpandLess/> : <ExpandMore/>}\n                    </ListItem>\n                </Box>\n                <Box boxShadow={2}>\n                    <Collapse className={classes.collapse} in={openFilter} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItem className={classes.nested}>\n                                <Layer currentValue={filters.layer} setParentState={handleFiltersChanged}/>\n                            </ListItem>\n                            <ListItem className={classes.nested}>\n                                <Protocol currentValue={filters.protocol} setParentState={handleFiltersChanged}/>\n                            </ListItem>\n                            <ListItem className={classes.nested}>\n                                <IpAddress currentValue={{\n                                    ipVersion: filters.ipVersion,\n                                    sourceIp: filters.sourceIp,\n                                    destinationIp: filters.destinationIp\n                                }} setParentState={handleFiltersChanged}/>\n                            </ListItem>\n                            <ListItem className={classes.nested}>\n                                <PortNumber currentValue={{\n                                    sourcePort: filters.sourcePort,\n                                    destinationPort: filters.destinationPort\n                                }} setParentState={handleFiltersChanged}/>\n                            </ListItem>\n                            <ListItem className={classes.nested}>\n                                <CustomizedButton applyFilterHandler={handleFiltersApplied}/>\n                            </ListItem>\n                        </List>\n                    </Collapse>\n                </Box>\n            </List>\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport CloseIcon from '@material-ui/icons/Close';\nimport List from \"@material-ui/core/List\";\nimport Box from \"@material-ui/core/Box\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nconst useStyles = makeStyles((theme) => ({\n        closeIcon: {\n            direction: \"rtl\",\n            color: '#2e7d32',\n            padding: '8px'\n        },\n        form: {\n            display: 'flex',\n            flexDirection: 'column',\n            margin: 'auto',\n            width: 'fit-content',\n        },\n        formControl: {\n            marginTop: theme.spacing(2),\n            minWidth: 120,\n        },\n        formControlLabel: {\n            marginTop: theme.spacing(1),\n        },\n        container: {\n            maxWidth: '100%',\n\n        },\n        Sender: {\n            padding: \"8px\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n            borderLeft: \"5px solid #4caf50\",\n            borderTop: \"5px solid #ffffff\",\n            borderBottom: \"5px solid #ffffff\",\n            // borderRadius: \"5%\",\n        },\n        nested2: {\n            paddingLeft: theme.spacing(4),\n            borderLeft: \"5px solid #4caf50\",\n        },\n    nested3: {\n        marginTop: \"3px\" ,\n        paddingLeft: theme.spacing(4),\n        borderLeft: \"5px solid #4caf50\",\n    },\n        listItem: {\n            // borderRadius: '5px',\n            backgroundColor: \"#c5e1a5\"\n        },\n        collapse: {\n            backgroundColor: '#fafafa',\n        },\n\n        root: {\n            width: '85%',\n            margin: \"auto\"\n        },\n        zero: {\n            marginBottom: '20px'\n        },\n        box: {\n            padding: '10px',\n            flex: '20%',\n            margin: '15px',\n            borderRadius: \"5px\"\n        },\n        size: {\n            backgroundColor: '#6a994e',\n        },\n        date: {\n            backgroundColor: '#55a630',\n        },\n        protocol: {\n            backgroundColor: '#43a047',\n        },\n        more: {\n            backgroundColor: \"#2b9348\",\n        },\n        paragraph: {\n            textAlign: \"center\"\n        },\n        boxContainer: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            textAlign: \"left\",\n            maxWidth: \"88%\",\n            margin: \"auto\"\n        },\n        pre: {\n            whiteSpace: \"pre-wrap\",\n            wordBreak: \"break-word\"\n        }\n\n    })\n);\n\nexport default function ModalLayer(props) {\n    const classes = useStyles();\n\n    const {handleClose, packet} = props;\n    const [fullWidth, setFullWidth] = React.useState(true);\n    const [maxWidth, setMaxWidth] = React.useState('md');\n    const [openSender, setOpenSender] = React.useState(false);\n    const [openReceiver, setOpenReceiver] = React.useState(false);\n    const [openDescriptor, setOpenDescriptor] = React.useState(false);\n\n    const toggleSender = () => {\n        setOpenSender(!openSender);\n    };\n\n    const toggleReceiver = () => {\n        setOpenReceiver(!openReceiver);\n    };\n\n    const toggleDescriptor = () => {\n        setOpenDescriptor(!openDescriptor);\n    };\n\n    const onClose = () => {\n        setOpenSender(false)\n        setOpenReceiver(false)\n        setOpenDescriptor(false)\n        handleClose()\n    }\n\n    if (packet == null) {\n        return null\n    }\n\n    return (\n        <div>\n            <Dialog\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                open={true}\n                onClose={onClose}\n            >\n                <div className={classes.closeIcon}>\n                    <CloseIcon\n                        onClick={onClose}\n                        style={{fontSize: 30}}\n                    />\n                </div>\n                <div className={classes.zero}>\n                    <div className={classes.boxContainer}>\n                        <Box\n                            boxShadow={3}\n                            className={`${classes.box} ${classes.size}`}\n                        >\n                            Size\n                            <p className={classes.paragraph}>{`${packet.size} bytes`}</p>\n                        </Box>\n                        <Box\n                            boxShadow={3}\n                            className={`${classes.box} ${classes.date}`}\n                        >\n                            Date\n                            <p className={classes.paragraph}>{packet.date}</p>\n                        </Box>\n                        <Box\n                            boxShadow={3}\n                            className={`${classes.box} ${classes.protocol}`}\n                        >\n                            Protocol\n                            <p className={classes.paragraph}>{packet.protocol}</p>\n                        </Box>\n\n                        {\n                            packet.extraInfo ?\n                                <Box\n                                    boxShadow={3}\n                                    className={`${classes.box} ${classes.more}`}\n                                >\n                                    More\n                                    <p className={classes.paragraph}>{packet.extraInfo}</p>\n                                </Box>\n                                : null\n                        }\n\n                    </div>\n                    <div className={classes.container}>\n                        <List className={classes.root}>\n                            <Box boxShadow={3}>\n                                <ListItem className={classes.listItem} button onClick={toggleSender}>\n                                    <ListItemText className={classes.Sender} primary=\"Sender\"/>\n                                    {openSender ? <ExpandLess/> : <ExpandMore/>}\n                                </ListItem>\n                            </Box>\n                            <Box>\n                                <Collapse className={classes.collapse} in={openSender} timeout=\"auto\" unmountOnExit>\n                                    <List component=\"div\" disablePadding>\n                                        <ListItem className={classes.nested}>\n                                            <p>IP Address: {packet.srcIp} (IPv{packet.ipVersion})</p>\n                                        </ListItem>\n                                        <ListItem className={classes.nested2}>\n                                            <p>Mac Address: {packet.srcMac}</p>\n                                        </ListItem>\n                                        {\n                                            packet.srcPort ?\n                                                <ListItem className={classes.nested}>\n                                                    <p>Port: {packet.srcPort.value} ({packet.srcPort.name})</p>\n                                                </ListItem>\n                                                : null\n                                        }\n                                    </List>\n                                </Collapse>\n                            </Box>\n                        </List>\n                    </div>\n                    <div className={classes.container}>\n                        <List className={classes.root}>\n                            <Box boxShadow={3}>\n                                <ListItem className={classes.listItem} button onClick={toggleReceiver}>\n                                    <ListItemText className={classes.Sender} primary=\"Receiver\"/>\n                                    {openReceiver ? <ExpandLess/> : <ExpandMore/>}\n                                </ListItem>\n                            </Box>\n                            <Box boxShadow={2}>\n                                <Collapse className={classes.collapse} in={openReceiver} timeout=\"auto\" unmountOnExit>\n                                    <List component=\"div\" disablePadding>\n                                        <ListItem className={classes.nested}>\n                                            <p>IP Address: {packet.dstIp} (IPv{packet.ipVersion})</p>\n                                        </ListItem>\n                                        <ListItem className={classes.nested2}>\n                                            <p>Mac Address: {packet.dstMac}</p>\n                                        </ListItem>\n                                        {\n                                            packet.dstPort ?\n                                                <ListItem className={classes.nested}>\n                                                    <p>Port: {packet.dstPort.value} ({packet.dstPort.name})</p>\n                                                </ListItem>\n                                                : null\n                                        }\n                                    </List>\n                                </Collapse>\n                            </Box>\n                        </List>\n                    </div>\n                    <div className={classes.container}>\n                        <List className={classes.root}>\n                            <Box boxShadow={3}>\n                                <ListItem className={classes.listItem} button onClick={toggleDescriptor}>\n                                    <ListItemText className={classes.Sender} primary=\"Descriptor\"/>\n                                    {openDescriptor ? <ExpandLess/> : <ExpandMore/>}\n                                </ListItem>\n                            </Box>\n                            <Box boxShadow={2}>\n                                <Collapse className={classes.collapse} in={openDescriptor} timeout=\"auto\" unmountOnExit>\n                                    <List component=\"div\" disablePadding>\n                                        <ListItem className={classes.nested3}>\n                                            <pre className={classes.pre}>{packet.descriptor}</pre>\n                                        </ListItem>\n                                    </List>\n                                </Collapse>\n                            </Box>\n                        </List>\n                    </div>\n                </div>\n                {/*<DialogContent>*/}\n                {/*    <DialogContentText>*/}\n                {/*        You can set my maximum width and whether to adapt or not.*/}\n                {/*    </DialogContentText>*/}\n                {/*    <form className={classes.form} noValidate>*/}\n                {/*<FormControl className={classes.formControl}>*/}\n                {/*    <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>*/}\n                {/*    <Select*/}\n                {/*        autoFocus*/}\n                {/*        value={maxWidth}*/}\n                {/*        onChange={handleMaxWidthChange}*/}\n                {/*        inputProps={{*/}\n                {/*            name: 'max-width',*/}\n                {/*            id: 'max-width',*/}\n                {/*        }}*/}\n                {/*    >*/}\n                {/*        <MenuItem value={false}>false</MenuItem>*/}\n                {/*        <MenuItem value=\"xs\">xs</MenuItem>*/}\n                {/*        <MenuItem value=\"sm\">sm</MenuItem>*/}\n                {/*        <MenuItem value=\"md\">md</MenuItem>*/}\n                {/*        <MenuItem value=\"lg\">lg</MenuItem>*/}\n                {/*        <MenuItem value=\"xl\">xl</MenuItem>*/}\n                {/*    </Select>*/}\n                {/*</FormControl>*/}\n                {/*<FormControlLabel*/}\n                {/*    className={classes.formControlLabel}*/}\n                {/*    control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}*/}\n                {/*    label=\"Full width\"*/}\n                {/*/>*/}\n                {/*    </form>*/}\n                {/*</DialogContent>*/}\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n        box: {\n            padding: '10px',\n            flex: '20%',\n            margin: '20px',\n            borderRadius: \"5px\"\n        },\n        count: {\n            backgroundColor: '#66bb6a',\n        },\n        minimumSize: {\n            backgroundColor: '#4caf50',\n        },\n        maximumSize: {\n            backgroundColor: '#629749',\n        },\n        averageSize: {\n            backgroundColor: '#53863c',\n        },\n        paragraph: {\n            textAlign: \"center\"\n        },\n        boxContainer: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            textAlign: \"left\",\n            maxWidth: \"74%\",\n            margin: \"auto\"\n        }\n    })\n);\n\nexport default function InformationBox({packets}) {\n    const classes = useStyles();\n    const count = packets.length\n\n    const sizeArray = packets.map(packet => packet.size)\n    let min = 0\n    let max = 0\n    let avg = 0\n    let sum = 0\n    if (sizeArray.length !== 0) {\n        min = sizeArray[0]\n        max = sizeArray[0]\n        sizeArray.forEach((item) => {\n            sum += item\n            min = Math.min(min, item)\n            max = Math.max(max, item)\n        })\n        avg = (sum / sizeArray.length).toFixed(2)\n    }\n\n    return (\n        <div className={classes.boxContainer}>\n            <Box\n                boxShadow={3}\n                className={`${classes.box} ${classes.count}`}\n            >\n                Packet Count\n                <p className={classes.paragraph}>{count}</p>\n            </Box>\n            <Box\n                boxShadow={3}\n                className={`${classes.box} ${classes.minimumSize}`}\n            >\n                Minimum Packet Size\n                <p className={classes.paragraph}>{min} bytes</p>\n            </Box>\n            <Box\n                boxShadow={3}\n                className={`${classes.box} ${classes.maximumSize}`}\n            >\n                Maximum Packet Size\n                <p className={classes.paragraph}>{max} bytes</p>\n            </Box>\n            <Box\n                boxShadow={3}\n                className={`${classes.box} ${classes.averageSize}`}\n            >\n                Average Size Of Packets\n                <p className={classes.paragraph}>{avg} bytes</p>\n            </Box>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ModalLayer from \"./ModalLayer\";\nimport InformationBox from \"./InformationBox\";\nimport Spinner from \"../../interfaces/spinner/Spinner\";\nimport * as SockJS from 'sockjs-client'\nimport Stomp from 'stompjs'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport {green, blue} from '@material-ui/core/colors';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst styles = ((theme) => ({\n        table: {\n            minWidth: 650\n        },\n        tableContainer: {\n            margin: \"auto\",\n            width: '90%',\n            marginBottom: \"100px\"\n        },\n        select: {\n            '&:hover': {\n                backgroundColor: '#fafafa',\n                cursor: 'pointer'\n            },\n            '&:active': {\n                backgroundColor: '#eeeeee'\n            },\n        },\n        title: {\n            backgroundColor: '#d7f2ba'\n        }\n    })\n);\n\nclass PacketsTable extends Component {\n    static BUFFER_MAX_SIZE = 100\n    static TIMEOUT = 1000\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            packets: [],\n            clickedItem: null,\n            loading: true,\n            lastIndex: -1\n        }\n        this.buffer = []\n    }\n\n    componentDidMount() {\n        this.socket = new SockJS('/gs-guide-websocket');\n        const stompClient = Stomp.over(this.socket);\n        stompClient.allowCredentials = false\n        stompClient.connect({}, (frame) => {\n            setInterval(() => {\n                this.pushPackets()\n            }, PacketsTable.TIMEOUT)\n            this.setState({loading: false})\n            stompClient.subscribe('/network/packet', (message) => {\n                const packet = JSON.parse(message.body)\n                this.buffer.push(packet)\n                if (this.buffer.length % PacketsTable.BUFFER_MAX_SIZE === 0) {\n                    this.pushPackets()\n                }\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.socket.close(1000, \"STOP_ANALYZING\")\n    }\n\n    pushPackets() {\n        const {lastIndex} = this.state\n        if (lastIndex < this.buffer.length - 1) {\n            this.state.packets.push(...this.buffer.slice(lastIndex + 1, this.buffer.length))\n            this.setState({\n                packets: this.state.packets,\n                lastIndex: this.buffer.length - 1\n            })\n        }\n    }\n\n    render() {\n        const {filters} = this.props\n        const {packets, clickedItem, loading} = this.state\n        const filteredPackets = packets.filter(packet => {\n            // Layer Filter\n            if (filters.layer === \"Application\") {\n                if (packet.srcPort == null && packet.dstPort == null) {\n                    return false\n                }\n            } else if (filters.layer === \"Network\") {\n                if (packet.srcPort != null && packet.dstPort != null) {\n                    return false\n                }\n            }\n\n            // Protocol\n            if (filters.protocol !== \"All\" && filters.protocol !== packet.protocol) {\n                return false\n            }\n\n            // Ip Address\n            if (filters.sourceIp && (filters.ipVersion !== packet.ipVersion || filters.sourceIp !== packet.srcIp)) {\n                return false\n            }\n            if (filters.destinationIp && (filters.ipVersion !== packet.ipVersion || filters.destinationIp !== packet.dstIp)) {\n                return false\n            }\n\n            // Port Number\n            if (filters.sourcePort && (packet.srcPort == null || filters.sourcePort !== packet.srcPort.value.toString())) {\n                return false\n            }\n            if (filters.destinationPort && (packet.dstPort == null || filters.destinationPort !== packet.dstPort.value.toString())) {\n                return false\n            }\n            return true\n        })\n        const {classes} = this.props\n\n        return (\n            <div>\n                {loading ? <Spinner/> : null}\n                <InformationBox packets={filteredPackets}/>\n                <TableContainer className={classes.tableContainer} component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow className={classes.title}>\n                                <TableCell align=\"center\">IN/OUT</TableCell>\n                                <TableCell align=\"center\">#</TableCell>\n                                <TableCell align=\"center\">Date</TableCell>\n                                <TableCell align=\"center\">Size (bytes)</TableCell>\n                                <TableCell align=\"center\">Protocol</TableCell>\n                                <TableCell align=\"center\">Source IP</TableCell>\n                                <TableCell align=\"center\">Destination IP</TableCell>\n                                <TableCell align=\"center\">Info</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {filteredPackets.map((packet) => (\n                                    <TableRow key={packet.id} className={classes.select}\n                                              onClick={() => this.setState({clickedItem: packet})}\n                                    >\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                                            {(() => {\n                                                if (packet.type === 1) {\n                                                    return (\n                                                        <ArrowUpwardIcon style={{color: green[500]}}/>\n                                                    )\n                                                } else if (packet.type === -1) {\n                                                    return (\n                                                        <ArrowDownwardIcon style={{color: blue[500]}}/>\n                                                    )\n                                                } else {\n                                                    return null\n                                                }\n                                            })()}\n                                        </TableCell>\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">{packet.id}</TableCell>\n                                        <TableCell align=\"center\">{packet.date}</TableCell>\n                                        <TableCell align=\"center\">{packet.size}</TableCell>\n                                        <TableCell align=\"center\">{packet.protocol}</TableCell>\n                                        <TableCell align=\"center\">{packet.srcIp}</TableCell>\n                                        <TableCell align=\"center\">{packet.dstIp}</TableCell>\n                                        <TableCell align=\"center\">{packet.extraInfo}</TableCell>\n                                    </TableRow>\n                                )\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <ModalLayer handleClose={() => this.setState({clickedItem: null})} packet={clickedItem}/>\n            </div>\n        );\n    }\n}\n\nconst StyledTable = withStyles(styles)(PacketsTable)\n\nexport default StyledTable","import React from 'react';\nimport Filters from \"./filter/Filters\";\nimport StyledTable from \"./packetstable/PacketsTable\";\n\nfunction Page() {\n    const [filters, setFilters] = React.useState({\n        layer: \"All\",\n        protocol: \"All\",\n        ipVersion: 4,\n        sourceIp: \"\",\n        destinationIp: \"\",\n        sourcePort: \"\",\n        destinationPort: \"\"\n    });\n    const handleFiltersChanged = (filter) => {\n        setFilters(filter)\n    }\n\n    return (\n        <div>\n            <Filters setParentState={handleFiltersChanged}/>\n            <StyledTable filters={filters}/>\n        </div>\n    );\n}\n\nexport default Page;\n","import React from 'react';\nimport Interfaces from \"../interfaces/Interfaces\";\nimport {Route} from 'react-router-dom';\nimport EachInterface from '../eachinterface/EachInterface'\n\nfunction Page() {\n    return (\n        <div>\n            <Route exact path='/' component={Interfaces}/>\n            <Route exact path='/EachInterface' component={EachInterface}/>\n        </div>\n    );\n}\n\nexport default Page;\n","import './App.css';\nimport Page from \"./component/page/Page\";\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div>\n        <Page />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}