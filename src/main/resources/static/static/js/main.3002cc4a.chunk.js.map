{"version":3,"sources":["component/interfaces/Interfaces.js","component/eachinterface/filter/Layer.js","component/eachinterface/filter/Protocol.js","component/eachinterface/filter/IpAddress.js","component/eachinterface/filter/PortNumber.js","component/eachinterface/filter/CustomizedButton.js","component/eachinterface/filter/Filters.js","component/eachinterface/spinner/Spinner.js","component/eachinterface/InformationBox.js","component/eachinterface/CustomizedTable.js","component/eachinterface/ModalLayer.js","component/eachinterface/EachInterface.js","component/page/Page.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","margin","border","borderRadius","backgroundColor","marginTop","nested","paddingLeft","spacing","createMuiTheme","overrides","MuiListSubheader","paddingTop","Interfaces","props","classes","React","useState","interfaces","setInterfaces","useEffect","axios","get","then","res","data","handleClick","name","post","status","history","push","ThemeProvider","List","component","aria-labelledby","subheader","ListSubheader","id","className","map","value","ListItem","button","onClick","bind","ListItemIcon","ListItemText","primary","layerContainer","borderBottom","width","layer","display","marginLeft","formGroup","justifyContent","marginRight","listItem","collapse","Layer","currentValue","setParentState","openLayer","setOpenLayer","toggleLayers","handleClickLayer","ev","key","target","textContent","Collapse","in","timeout","unmountOnExit","disablePadding","layers","protocol","protocolContainer","Protocol","openProtocol","setOpenProtocol","toggleProtocols","handleClickProtocol","protocols","ipAddressContainer","ipAddress","marginBottom","form","radioButtonContainer","CssTextField","withStyles","color","borderColor","TextField","MuiRadio","colorSecondary","MuiFormGroup","flexDirection","IpAddress","handleIpChanged","trim","RadioGroup","aria-label","ipVersion","onChange","FormControlLabel","control","Radio","label","noValidate","autoComplete","variant","sourceIp","type","destinationIp","portNumberContainer","portNumber","PortNumber","handlePortChange","sourcePort","destinationPort","buttonContainer","ColorButton","palette","getContrastText","green","Button","CustomizedButton","applyFilterHandler","size","container","overflow","filterBy","padding","borderLeft","borderRight","Filters","openFilter","setOpenFilter","filters","setFilters","toggleFilters","handleFiltersChanged","filter","Box","boxShadow","modal","position","zIndex","left","top","height","alignItems","Spinner","box","flex","count","minimumSize","maximumSize","averageSize","paragraph","textAlign","boxContainer","flexWrap","InformationBox","packets","length","sizeArray","packet","min","max","avg","sum","forEach","item","Math","toFixed","clsx","table","flip","paddingRight","direction","undefined","flexContainer","boxSizing","tableHeader","borderTopLeftRadius","borderTopRightRadius","tableRow","cursor","outline","tableCell","paper","CustomizedTable","getRowClassName","index","cellRenderer","cellData","columnIndex","TableCell","align","style","blue","headerRenderer","getColumn","dataKey","grow","shrink","flexGrow","flexShrink","Paper","headerHeight","rowHeight","rowCount","rowGetter","onRowClick","rowClassName","closeIcon","formControl","minWidth","formControlLabel","Sender","borderTop","nested2","nested3","zero","date","more","pre","whiteSpace","wordBreak","ModalLayer","handleClose","fullWidth","openSender","setOpenSender","openReceiver","setOpenReceiver","openDescriptor","setOpenDescriptor","onClose","Dialog","open","fontSize","extraInfo","srcIp","srcMac","srcPort","dstIp","dstMac","dstPort","descriptor","Page","setState","state","clickedItem","loading","lastIndex","buffer","this","socket","SockJS","stompClient","Stomp","over","allowCredentials","connect","setInterval","pushPackets","TIMEOUT","subscribe","message","JSON","parse","body","BUFFER_MAX_SIZE","close","slice","filteredPackets","toString","Component","exact","path","EachInterface","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3002cc4a.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport {createMuiTheme, makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SendIcon from '@material-ui/icons/Send';\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n        root: {\n            maxWidth: '70%',\n            margin: \"auto\",\n            border: \"5px solid #4caf50\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#f1f8e9\",\n            marginTop: \"5px\"\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n    })\n);\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiListSubheader: {\n            root: {\n                paddingTop: \"5px\"\n            }\n        },\n    }\n});\n\nexport default function Interfaces(props) {\n    const classes = useStyles();\n    const [interfaces, setInterfaces] = React.useState([]);\n\n    useEffect(() => {\n        axios.get(\"/interface\")\n            .then(res => {\n                setInterfaces(res.data)\n            })\n    }, [])\n\n    const handleClick = (name) => {\n        axios.post(\n            \"/interface\",\n            {name: name}\n        ).then(res => {\n            if (res.status === 200) {\n                props.history.push(\"/EachInterface\");\n            }\n        })\n    };\n\n    return (\n        <div>\n            <ThemeProvider theme={theme}>\n                <List\n                    component=\"nav\"\n                    aria-labelledby=\"nested-list-subheader\"\n                    subheader={\n                        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                            Network Interfaces\n                        </ListSubheader>\n                    }\n                    className={classes.root}\n                >\n                    {\n                        interfaces.map(value => {\n                            return (\n                                <ListItem key={value.id} button onClick={handleClick.bind(null, value.name)}>\n                                    <ListItemIcon>\n                                        <SendIcon/>\n                                    </ListItemIcon>\n                                    <ListItemText primary={value.name}/>\n                                </ListItem>\n                            )\n                        })\n                    }\n                </List>\n            </ThemeProvider>\n        </div>\n    );\n}\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport LayersIcon from '@material-ui/icons/Layers';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n        layerContainer: {\n            borderBottom: \"3px solid #66bb6a\",\n            width: \"inherit\"\n        },\n        layer: {\n            display: \"block\",\n            marginLeft: \"20px\"\n        },\n        formGroup: {\n            justifyContent: \"space-evenly\",\n            marginRight: \"15px\"\n        },\n        nested: {\n            paddingLeft: theme.spacing(4)\n        },\n        listItem: {\n            backgroundColor: '#f1f8e9'\n        },\n        collapse: {\n            backgroundColor: '#fafafa'\n        },\n        root: {\n            width: '90%',\n            // backgroundColor: theme.palette.background.paper,\n            backgroundColor: '#ffffff',\n            margin: \"auto\"\n        }\n    })\n);\n\nexport default function Layer({currentValue, setParentState}) {\n    const classes = useStyles();\n    const [openLayer, setOpenLayer] = React.useState(false);\n\n    const toggleLayers = () => {\n        setOpenLayer(!openLayer);\n    };\n\n    const handleClickLayer = (ev) => {\n        setParentState({\n            key: \"layer\",\n            value: ev.target.textContent\n        })\n        toggleLayers()\n    }\n\n    return (\n        <div className={classes.layerContainer}>\n            <p className={classes.layer}>Layer:</p>\n            <List className={classes.root}>\n                <ListItem className={classes.listItem} onClick={toggleLayers} button>\n                    <ListItemIcon>\n                        <LayersIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary={currentValue}/>\n                    {openLayer ? <ExpandLess/> : <ExpandMore/>}\n                </ListItem>\n                <Collapse className={classes.collapse} in={openLayer} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        {\n                            layers.map(value => (\n                                <ListItem className={classes.nested} key={value} onClick={handleClickLayer} button>\n                                    <ListItemIcon>\n                                        <StarBorder/>\n                                    </ListItemIcon>\n                                    <ListItemText primary={value}/>\n                                </ListItem>\n                            ))\n                        }\n                    </List>\n                </Collapse>\n            </List>\n        </div>\n    )\n}\n\nconst layers = [\n    \"All\",\n    \"Application\",\n    \"Network\"\n]\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n        protocol: {\n            display: \"block\",\n            marginLeft: \"20px\"\n        },\n        protocolContainer: {\n            borderBottom: \"3px solid #66bb6a\",\n            width: \"inherit\"\n        },\n        nested: {\n            paddingLeft: theme.spacing(4)\n        },\n        listItem: {\n            backgroundColor: '#f1f8e9'\n        },\n        collapse: {\n            backgroundColor: '#fafafa'\n        },\n        root: {\n            width: '90%',\n            backgroundColor: '#ffffff',\n            // backgroundColor: theme.palette.background.paper,\n            margin: \"auto\"\n        }\n    })\n);\n\nexport default function Protocol({currentValue, setParentState}) {\n    const classes = useStyles();\n    const [openProtocol, setOpenProtocol] = React.useState(false);\n\n    const toggleProtocols = () => {\n        setOpenProtocol(!openProtocol);\n    };\n\n    const handleClickProtocol = (ev) => {\n        setParentState({\n            key: \"protocol\",\n            value: ev.target.textContent\n        })\n        toggleProtocols()\n    }\n\n    return (\n        <div className={classes.protocolContainer}>\n            <p className={classes.protocol}>Protocol:</p>\n            <List className={classes.root}>\n                <ListItem className={classes.listItem} onClick={toggleProtocols} button>\n                    <ListItemIcon>\n                        <ReceiptIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary={currentValue}/>\n                    {openProtocol ? <ExpandLess/> : <ExpandMore/>}\n                </ListItem>\n                <Collapse className={classes.collapse} in={openProtocol} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        {\n                            protocols.map(value => (\n                                <ListItem className={classes.nested} key={value} onClick={handleClickProtocol} button>\n                                    <ListItemIcon>\n                                        <StarBorder/>\n                                    </ListItemIcon>\n                                    <ListItemText primary={value}/>\n                                </ListItem>\n                            ))\n                        }\n                    </List>\n                </Collapse>\n            </List>\n        </div>\n    )\n}\n\nconst protocols = [\n    \"All\",\n    \"TCP\",\n    \"UDP\",\n    \"ICMPv4\",\n    \"IGMP\",\n    \"ARP\"\n]\n","import React from \"react\";\nimport {createMuiTheme, makeStyles, ThemeProvider, withStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\n\nconst useStyles = makeStyles((theme) => ({\n        ipAddressContainer: {\n            borderBottom: \"3px solid #66bb6a\",\n            width: \"inherit\"\n        },\n        ipAddress: {\n            display: \"flex\",\n            marginLeft: \"20px\",\n            marginBottom: \"20px\"\n        },\n        form: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '25ch',\n                justifyContent: \"space-evenly\"\n            },\n            justifyContent: \"space-evenly\",\n            display: \"flex\"\n        },\n        radioButtonContainer: {\n            display: \"grid\",\n            marginLeft: \"30px\"\n        }\n    })\n);\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: '#1b5e20'\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: '#aed581'\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: '#9ccc65'\n            }\n        }\n    }\n})(TextField);\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiRadio: {\n            colorSecondary: {\n                '&.Mui-checked': {\n                    color: 'green'\n                }\n            }\n        },\n        MuiFormGroup: {\n            root: {\n                flexDirection: \"row\"\n            }\n        }\n    }\n});\n\nexport default function IpAddress({currentValue, setParentState}) {\n\n    const classes = useStyles();\n\n    const handleIpChanged = (ev) => {\n        setParentState({\n            key: ev.target.name,\n            value: ev.target.value.trim()\n        })\n    }\n\n    const handleIpVersionChanged = (ev) => {\n        setParentState({\n            key: ev.target.name,\n            value: +ev.target.value\n        })\n    }\n\n    return (\n        <div className={classes.ipAddressContainer}>\n            <div className={classes.ipAddress}>\n                <p>IP Address:</p>\n                <div className={classes.radioButtonContainer}>\n                    <ThemeProvider theme={theme}>\n                        <RadioGroup aria-label=\"IpVersion\" name=\"ipVersion\" value={currentValue.ipVersion}\n                                    onChange={handleIpVersionChanged}>\n                            <FormControlLabel value={4} control={<Radio/>} label=\"IPv4\"/>\n                            <FormControlLabel value={6} control={<Radio/>} label=\"IPv6\"/>\n                        </RadioGroup>\n                    </ThemeProvider>\n                </div>\n            </div>\n            <form className={classes.form} noValidate autoComplete=\"off\">\n                <CssTextField\n                    onChange={handleIpChanged}\n                    name=\"sourceIp\"\n                    variant=\"outlined\"\n                    label=\"Source IP\"\n                    value={currentValue.sourceIp}\n                    type='search'\n                />\n                <CssTextField\n                    onChange={handleIpChanged}\n                    name=\"destinationIp\"\n                    variant=\"outlined\"\n                    label=\"Destination IP\"\n                    value={currentValue.destinationIp}\n                    type='search'\n                />\n            </form>\n\n        </div>\n    )\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n        portNumberContainer: {\n            borderBottom: \"3px solid #66bb6a\",\n            width: \"inherit\"\n        },\n        portNumber: {\n            display: \"block\",\n            marginLeft: \"20px\"\n        },\n        form: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '25ch',\n                justifyContent: \"space-evenly\"\n            },\n            justifyContent: \"space-evenly\",\n            display: \"flex\"\n        }\n    })\n);\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: '#1b5e20',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: '#aed581',\n                // border: \"2px solid #4db6ac\",\n                // backgroundColor: 'white'\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: '#9ccc65',\n                // border: \"2px solid #4db6ac\"\n            }\n        }\n    }\n})(TextField);\n\nexport default function PortNumber({currentValue, setParentState}) {\n    const classes = useStyles();\n\n    const handlePortChange = (ev) => {\n        setParentState({\n            key: ev.target.name,\n            value: ev.target.value.trim()\n        })\n    }\n\n    return (\n        <div className={classes.portNumberContainer}>\n            <p className={classes.portNumber}>Port Number:</p>\n            <form className={classes.form} noValidate autoComplete=\"off\">\n                <CssTextField\n                    onChange={handlePortChange}\n                    name=\"sourcePort\"\n                    variant=\"outlined\"\n                    label=\"Source Port\"\n                    value={currentValue.sourcePort}\n                    type='search'\n                />\n                <CssTextField\n                    onChange={handlePortChange}\n                    name=\"destinationPort\"\n                    variant=\"outlined\"\n                    label=\"Destination Port\"\n                    value={currentValue.destinationPort}\n                    type='search'\n                />\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {green} from '@material-ui/core/colors';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n        margin: {\n            margin: theme.spacing(1)\n        },\n        buttonContainer: {\n            margin: \"auto\"\n        }\n    })\n);\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText(green[500]),\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700]\n        }\n    }\n}))(Button);\n\nexport default function CustomizedButton({applyFilterHandler}) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.buttonContainer}>\n            <ColorButton\n                onClick={applyFilterHandler}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                className={classes.margin}>\n                Filter\n            </ColorButton>\n        </div>\n    )\n}\n","import React from 'react';\nimport Layer from \"./Layer\";\nimport Protocol from \"./Protocol\";\nimport IpAddress from \"./IpAddress\";\nimport PortNumber from \"./PortNumber\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport CustomizedButton from \"./CustomizedButton\";\nimport Box from '@material-ui/core/Box';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n        container: {\n            maxWidth: '80%',\n            margin: \"auto\",\n            overflow: \"hidden\",\n        },\n        filterBy: {\n            padding: \"8px\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4)\n        },\n        listItem: {\n            borderLeft: \"5px solid #4caf50\",\n            borderRight: \"5px solid #4caf50\",\n            borderBottom: \"3px solid #4caf50\",\n            borderRadius: '5px',\n            backgroundColor: \"#f1f8e9\"\n            // backgroundColor: '#f1f8e9'\n        },\n        collapse: {\n            backgroundColor: '#ffffff',\n        },\n        root: {\n            width: '90%',\n            margin: \"auto\"\n        }\n    })\n);\n\nexport default function Filters({setParentState}) {\n    const classes = useStyles();\n    const [openFilter, setOpenFilter] = React.useState(false);\n    const [filters, setFilters] = React.useState({\n        layer: \"All\",\n        protocol: \"All\",\n        ipVersion: 4,\n        sourceIp: \"\",\n        destinationIp: \"\",\n        sourcePort: \"\",\n        destinationPort: \"\"\n    });\n\n    const toggleFilters = () => {\n        setOpenFilter(!openFilter);\n    };\n\n    const handleFiltersChanged = (filter) => {\n        setFilters({\n            ...filters,\n            [filter.key]: filter.value\n        })\n    }\n\n    const handleFiltersApplied = () => {\n        setParentState(filters)\n        toggleFilters()\n    }\n\n    return (\n        <div className={classes.container}>\n            <List className={classes.root}>\n                <Box boxShadow={3}>\n                    <ListItem className={classes.listItem} button onClick={toggleFilters}>\n                        <ListItemText className={classes.filterBy} primary=\"Filter By\"/>\n                        {openFilter ? <ExpandLess/> : <ExpandMore/>}\n                    </ListItem>\n                </Box>\n                <Box boxShadow={2}>\n                    <Collapse className={classes.collapse} in={openFilter} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItem className={classes.nested}>\n                                <Layer currentValue={filters.layer} setParentState={handleFiltersChanged}/>\n                            </ListItem>\n                            <ListItem className={classes.nested}>\n                                <Protocol currentValue={filters.protocol} setParentState={handleFiltersChanged}/>\n                            </ListItem>\n                            <ListItem className={classes.nested}>\n                                <IpAddress currentValue={{\n                                    ipVersion: filters.ipVersion,\n                                    sourceIp: filters.sourceIp,\n                                    destinationIp: filters.destinationIp\n                                }} setParentState={handleFiltersChanged}/>\n                            </ListItem>\n                            <ListItem className={classes.nested}>\n                                <PortNumber currentValue={{\n                                    sourcePort: filters.sourcePort,\n                                    destinationPort: filters.destinationPort\n                                }} setParentState={handleFiltersChanged}/>\n                            </ListItem>\n                            <ListItem className={classes.nested}>\n                                <CustomizedButton applyFilterHandler={handleFiltersApplied}/>\n                            </ListItem>\n                        </List>\n                    </Collapse>\n                </Box>\n            </List>\n        </div>\n    );\n}\n","import React from 'react';\nimport './Spinner.css';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n        modal: {\n            position: 'fixed',\n            zIndex: '1',\n            paddingTop: '310px',\n            left: '0',\n            top: '0',\n            width: '100%',\n            height: '100%',\n            overflow: 'auto',\n            backgroundColor: 'rgba(0,0,0,0.4)',\n            alignItems: \"center\"\n        }\n    })\n);\n\nexport default function Spinner() {\n    const classes = useStyles();\n    return (\n        <div className={classes.modal}>\n            <div>\n                <div className=\"Loader\">Loading...</div>\n                {/*<p>Some text in the Modal..</p>*/}\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport Box from \"@material-ui/core/Box\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n        box: {\n            padding: '10px',\n            flex: '20%',\n            margin: '20px',\n            borderRadius: \"5px\"\n        },\n        count: {\n            backgroundColor: '#66bb6a',\n        },\n        minimumSize: {\n            backgroundColor: '#4caf50',\n        },\n        maximumSize: {\n            backgroundColor: '#629749',\n        },\n        averageSize: {\n            backgroundColor: '#53863c',\n        },\n        paragraph: {\n            textAlign: \"center\"\n        },\n        boxContainer: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            textAlign: \"left\",\n            maxWidth: \"74%\",\n            margin: \"auto\"\n        }\n    })\n);\n\nexport default function InformationBox({packets}) {\n    const classes = useStyles();\n    const count = packets.length\n\n    const sizeArray = packets.map(packet => packet.size)\n    let min = 0\n    let max = 0\n    let avg = 0\n    let sum = 0\n    if (sizeArray.length !== 0) {\n        min = sizeArray[0]\n        max = sizeArray[0]\n        sizeArray.forEach((item) => {\n            sum += item\n            min = Math.min(min, item)\n            max = Math.max(max, item)\n        })\n        avg = (sum / sizeArray.length).toFixed(2)\n    }\n\n    return (\n        <div className={classes.boxContainer}>\n            <Box\n                boxShadow={3}\n                className={clsx(classes.box, classes.count)}\n            >\n                Packet Count\n                <p className={classes.paragraph}>{count}</p>\n            </Box>\n            <Box\n                boxShadow={3}\n                className={clsx(classes.box, classes.minimumSize)}\n            >\n                Minimum Packet Size\n                <p className={classes.paragraph}>{min} bytes</p>\n            </Box>\n            <Box\n                boxShadow={3}\n                className={clsx(classes.box, classes.maximumSize)}\n            >\n                Maximum Packet Size\n                <p className={classes.paragraph}>{max} bytes</p>\n            </Box>\n            <Box\n                boxShadow={3}\n                className={clsx(classes.box, classes.averageSize)}\n            >\n                Average Size Of Packets\n                <p className={classes.paragraph}>{avg} bytes</p>\n            </Box>\n        </div>\n    );\n}\n","import Paper from '@material-ui/core/Paper';\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport {blue, green} from \"@material-ui/core/colors\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport Column from \"react-virtualized/dist/commonjs/Table/Column\";\nimport AutoSizer from \"react-virtualized/dist/commonjs/AutoSizer\";\nimport Table from \"react-virtualized/dist/commonjs/Table\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n        table: {\n            '& .ReactVirtualized__Table__headerRow': {\n                flip: false,\n                paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined\n            }\n        },\n        flexContainer: {\n            display: 'flex',\n            alignItems: 'center',\n            boxSizing: 'border-box',\n            border: 'none'\n        },\n        tableHeader: {\n            backgroundColor: \"#d7f2ba\",\n            borderTopLeftRadius: 5,\n            borderTopRightRadius: 5\n        },\n        tableRow: {\n            cursor: 'pointer',\n            borderBottom: '1px solid #eeeeee',\n            '&:focus': {\n                outline: 'none'\n            },\n            '&:hover': {\n                backgroundColor: '#fafafa'\n            },\n            '&:active': {\n                backgroundColor: '#eeeeee'\n            }\n        },\n        tableCell: {\n            flex: 1\n        },\n        paper: {\n            width: '80%',\n            height: 500,\n            margin: 'auto',\n            marginBottom: 50,\n            marginTop: 20\n        }\n    })\n)\n\nexport default function CustomizedTable({packets, onClick}) {\n    const classes = useStyles()\n\n    const getRowClassName = ({index}) => {\n        if (index === -1) {\n            return clsx(classes.flexContainer, classes.tableHeader)\n        } else {\n            return clsx(classes.flexContainer, classes.tableRow)\n        }\n    };\n\n    const cellRenderer = ({cellData, columnIndex}) => {\n        return (\n            <TableCell\n                component=\"div\"\n                className={clsx(classes.tableCell, classes.flexContainer)}\n                variant=\"body\"\n                align=\"center\"\n            >\n                <div style={{width: \"100%\", justifyContent: 'center'}}>\n                    {(() => {\n                        if (columnIndex === 0) {\n                            if (cellData === 1) {\n                                return <ArrowUpwardIcon style={{color: green[500]}}/>\n                            } else if (cellData === -1) {\n                                return <ArrowDownwardIcon style={{color: blue[500]}}/>\n                            } else {\n                                return null\n                            }\n                        } else {\n                            return cellData\n                        }\n                    })()}\n                </div>\n            </TableCell>\n        );\n    };\n\n    const headerRenderer = ({label}) => {\n        return (\n            <TableCell\n                component=\"div\"\n                className={clsx(classes.tableCell, classes.flexContainer)}\n                variant=\"head\"\n                align=\"center\"\n            >\n                <div style={{width: \"100%\", justifyContent: 'center'}}><b>{label}</b></div>\n            </TableCell>\n        );\n    };\n\n    const getColumn = (label, dataKey, width, grow, shrink) => {\n        return <Column label={label}\n                       dataKey={dataKey}\n                       width={width}\n                       headerRenderer={headerRenderer}\n                       cellRenderer={cellRenderer}\n                       flexGrow={grow}\n                       flexShrink={shrink}\n                       className={classes.flexContainer}/>\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <AutoSizer>\n                {({width, height}) => (\n                    <Table\n                        width={width}\n                        height={height}\n                        headerHeight={70}\n                        rowHeight={50}\n                        rowCount={packets.length}\n                        rowGetter={({index}) => packets[index]}\n                        onRowClick={({index}) => onClick(packets[index])}\n                        className={classes.table}\n                        rowClassName={getRowClassName}\n                    >\n                        {getColumn('In/Out', 'type', 50, 1, 2)}\n                        {getColumn('No.', 'id', 50, 1, 2)}\n                        {getColumn('Date', 'date', 120, 2, 2)}\n                        {getColumn('Size (bytes)', 'size', 80, 2, 2)}\n                        {getColumn('Protocol', 'protocol', 80, 2, 2)}\n                        {getColumn('Source IP', 'srcIp', 100, 3, 2)}\n                        {getColumn('Destination IP', 'dstIp', 100, 3, 2)}\n                        {getColumn('Info', 'extraInfo', 300, 5, 2)}\n                    </Table>\n                )}\n            </AutoSizer>\n        </Paper>\n    )\n}","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport CloseIcon from '@material-ui/icons/Close';\nimport List from \"@material-ui/core/List\";\nimport Box from \"@material-ui/core/Box\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n        closeIcon: {\n            direction: \"rtl\",\n            color: '#2e7d32',\n            padding: '8px'\n        },\n        form: {\n            display: 'flex',\n            flexDirection: 'column',\n            margin: 'auto',\n            width: 'fit-content',\n        },\n        formControl: {\n            marginTop: theme.spacing(2),\n            minWidth: 120,\n        },\n        formControlLabel: {\n            marginTop: theme.spacing(1),\n        },\n        container: {\n            maxWidth: '100%',\n\n        },\n        Sender: {\n            padding: \"8px\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n            borderLeft: \"5px solid #4caf50\",\n            borderTop: \"5px solid #ffffff\",\n            borderBottom: \"5px solid #ffffff\",\n            // borderRadius: \"5%\",\n        },\n        nested2: {\n            paddingLeft: theme.spacing(4),\n            borderLeft: \"5px solid #4caf50\"\n        },\n        nested3: {\n            marginTop: \"3px\",\n            paddingLeft: theme.spacing(4),\n            borderLeft: \"5px solid #4caf50\"\n        },\n        listItem: {\n            // borderRadius: '5px',\n            backgroundColor: \"#c5e1a5\"\n        },\n        collapse: {\n            backgroundColor: '#fafafa',\n        },\n\n        root: {\n            width: '85%',\n            margin: \"auto\"\n        },\n        zero: {\n            marginBottom: '20px'\n        },\n        box: {\n            padding: '10px',\n            flex: '20%',\n            margin: '15px',\n            borderRadius: \"5px\"\n        },\n        size: {\n            backgroundColor: '#6a994e',\n        },\n        date: {\n            backgroundColor: '#55a630',\n        },\n        protocol: {\n            backgroundColor: '#43a047',\n        },\n        more: {\n            backgroundColor: \"#2b9348\",\n        },\n        paragraph: {\n            textAlign: \"center\"\n        },\n        boxContainer: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            textAlign: \"left\",\n            maxWidth: \"88%\",\n            margin: \"auto\"\n        },\n        pre: {\n            whiteSpace: \"pre-wrap\",\n            wordBreak: \"break-word\"\n        }\n\n    })\n);\n\nexport default function ModalLayer(props) {\n    const classes = useStyles();\n\n    const {handleClose, packet} = props;\n    const [fullWidth, setFullWidth] = React.useState(true);\n    const [maxWidth, setMaxWidth] = React.useState('md');\n    const [openSender, setOpenSender] = React.useState(false);\n    const [openReceiver, setOpenReceiver] = React.useState(false);\n    const [openDescriptor, setOpenDescriptor] = React.useState(false);\n\n    const toggleSender = () => {\n        setOpenSender(!openSender);\n    };\n\n    const toggleReceiver = () => {\n        setOpenReceiver(!openReceiver);\n    };\n\n    const toggleDescriptor = () => {\n        setOpenDescriptor(!openDescriptor);\n    };\n\n    const onClose = () => {\n        setOpenSender(false)\n        setOpenReceiver(false)\n        setOpenDescriptor(false)\n        handleClose()\n    }\n\n    if (packet == null) {\n        return null\n    }\n\n    return (\n        <div>\n            <Dialog\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                open={true}\n                onClose={onClose}\n            >\n                <div className={classes.closeIcon}>\n                    <CloseIcon\n                        onClick={onClose}\n                        style={{fontSize: 30}}\n                    />\n                </div>\n                <div className={classes.zero}>\n                    <div className={classes.boxContainer}>\n                        <Box\n                            boxShadow={3}\n                            className={clsx(classes.box, classes.size)}\n                        >\n                            Size\n                            <p className={classes.paragraph}>{`${packet.size} bytes`}</p>\n                        </Box>\n                        <Box\n                            boxShadow={3}\n                            className={clsx(classes.box, classes.date)}\n                        >\n                            Date\n                            <p className={classes.paragraph}>{packet.date}</p>\n                        </Box>\n                        <Box\n                            boxShadow={3}\n                            className={clsx(classes.box, classes.protocol)}\n                        >\n                            Protocol\n                            <p className={classes.paragraph}>{packet.protocol}</p>\n                        </Box>\n\n                        {\n                            packet.extraInfo ?\n                                <Box\n                                    boxShadow={3}\n                                    className={clsx(classes.box, classes.more)}\n                                >\n                                    More\n                                    <p className={classes.paragraph}>{packet.extraInfo}</p>\n                                </Box>\n                                : null\n                        }\n\n                    </div>\n                    <div className={classes.container}>\n                        <List className={classes.root}>\n                            <Box boxShadow={3}>\n                                <ListItem className={classes.listItem} button onClick={toggleSender}>\n                                    <ListItemText className={classes.Sender} primary=\"Sender\"/>\n                                    {openSender ? <ExpandLess/> : <ExpandMore/>}\n                                </ListItem>\n                            </Box>\n                            <Box>\n                                <Collapse className={classes.collapse} in={openSender} timeout=\"auto\" unmountOnExit>\n                                    <List component=\"div\" disablePadding>\n                                        <ListItem className={classes.nested}>\n                                            <p>IP Address: {packet.srcIp} (IPv{packet.ipVersion})</p>\n                                        </ListItem>\n                                        <ListItem className={classes.nested2}>\n                                            <p>Mac Address: {packet.srcMac}</p>\n                                        </ListItem>\n                                        {\n                                            packet.srcPort ?\n                                                <ListItem className={classes.nested}>\n                                                    <p>Port: {packet.srcPort.value} ({packet.srcPort.name})</p>\n                                                </ListItem>\n                                                : null\n                                        }\n                                    </List>\n                                </Collapse>\n                            </Box>\n                        </List>\n                    </div>\n                    <div className={classes.container}>\n                        <List className={classes.root}>\n                            <Box boxShadow={3}>\n                                <ListItem className={classes.listItem} button onClick={toggleReceiver}>\n                                    <ListItemText className={classes.Sender} primary=\"Receiver\"/>\n                                    {openReceiver ? <ExpandLess/> : <ExpandMore/>}\n                                </ListItem>\n                            </Box>\n                            <Box boxShadow={2}>\n                                <Collapse className={classes.collapse} in={openReceiver} timeout=\"auto\" unmountOnExit>\n                                    <List component=\"div\" disablePadding>\n                                        <ListItem className={classes.nested}>\n                                            <p>IP Address: {packet.dstIp} (IPv{packet.ipVersion})</p>\n                                        </ListItem>\n                                        <ListItem className={classes.nested2}>\n                                            <p>Mac Address: {packet.dstMac}</p>\n                                        </ListItem>\n                                        {\n                                            packet.dstPort ?\n                                                <ListItem className={classes.nested}>\n                                                    <p>Port: {packet.dstPort.value} ({packet.dstPort.name})</p>\n                                                </ListItem>\n                                                : null\n                                        }\n                                    </List>\n                                </Collapse>\n                            </Box>\n                        </List>\n                    </div>\n                    <div className={classes.container}>\n                        <List className={classes.root}>\n                            <Box boxShadow={3}>\n                                <ListItem className={classes.listItem} button onClick={toggleDescriptor}>\n                                    <ListItemText className={classes.Sender} primary=\"Descriptor\"/>\n                                    {openDescriptor ? <ExpandLess/> : <ExpandMore/>}\n                                </ListItem>\n                            </Box>\n                            <Box boxShadow={2}>\n                                <Collapse className={classes.collapse} in={openDescriptor} timeout=\"auto\" unmountOnExit>\n                                    <List component=\"div\" disablePadding>\n                                        <ListItem className={classes.nested3}>\n                                            <pre className={classes.pre}>{packet.descriptor}</pre>\n                                        </ListItem>\n                                    </List>\n                                </Collapse>\n                            </Box>\n                        </List>\n                    </div>\n                </div>\n                {/*<DialogContent>*/}\n                {/*    <DialogContentText>*/}\n                {/*        You can set my maximum width and whether to adapt or not.*/}\n                {/*    </DialogContentText>*/}\n                {/*    <form className={classes.form} noValidate>*/}\n                {/*<FormControl className={classes.formControl}>*/}\n                {/*    <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>*/}\n                {/*    <Select*/}\n                {/*        autoFocus*/}\n                {/*        value={maxWidth}*/}\n                {/*        onChange={handleMaxWidthChange}*/}\n                {/*        inputProps={{*/}\n                {/*            name: 'max-width',*/}\n                {/*            id: 'max-width',*/}\n                {/*        }}*/}\n                {/*    >*/}\n                {/*        <MenuItem value={false}>false</MenuItem>*/}\n                {/*        <MenuItem value=\"xs\">xs</MenuItem>*/}\n                {/*        <MenuItem value=\"sm\">sm</MenuItem>*/}\n                {/*        <MenuItem value=\"md\">md</MenuItem>*/}\n                {/*        <MenuItem value=\"lg\">lg</MenuItem>*/}\n                {/*        <MenuItem value=\"xl\">xl</MenuItem>*/}\n                {/*    </Select>*/}\n                {/*</FormControl>*/}\n                {/*<FormControlLabel*/}\n                {/*    className={classes.formControlLabel}*/}\n                {/*    control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}*/}\n                {/*    label=\"Full width\"*/}\n                {/*/>*/}\n                {/*    </form>*/}\n                {/*</DialogContent>*/}\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Filters from \"./filter/Filters\";\nimport * as SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport Spinner from \"./spinner/Spinner\";\nimport InformationBox from \"./InformationBox\";\nimport CustomizedTable from \"./CustomizedTable\";\nimport ModalLayer from \"./ModalLayer\";\n\nexport default class Page extends React.Component {\n    static BUFFER_MAX_SIZE = 100\n    static TIMEOUT = 1000\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            packets: [],\n            clickedItem: null,\n            loading: true,\n            lastIndex: -1,\n            filters: {\n                layer: \"All\",\n                protocol: \"All\",\n                ipVersion: 4,\n                sourceIp: \"\",\n                destinationIp: \"\",\n                sourcePort: \"\",\n                destinationPort: \"\"\n            }\n        }\n        this.buffer = []\n    }\n\n    componentDidMount() {\n        this.socket = new SockJS('/gs-guide-websocket');\n        const stompClient = Stomp.over(this.socket);\n        stompClient.allowCredentials = false\n        stompClient.connect({}, () => {\n            setInterval(() => {\n                this.pushPackets()\n            }, Page.TIMEOUT)\n            this.setState({loading: false})\n            stompClient.subscribe('/network/packet', (message) => {\n                const packet = JSON.parse(message.body)\n                this.buffer.push(packet)\n                if (this.buffer.length % Page.BUFFER_MAX_SIZE === 0) {\n                    this.pushPackets()\n                }\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.socket.close(1000, \"STOP_ANALYZING\")\n    }\n\n    handleFiltersChanged = (filter) => {\n        this.setState({filters: filter})\n    }\n\n    pushPackets() {\n        const {lastIndex} = this.state\n        if (lastIndex < this.buffer.length - 1) {\n            this.state.packets.push(...this.buffer.slice(lastIndex + 1, this.buffer.length))\n            this.setState({\n                packets: this.state.packets,\n                lastIndex: this.buffer.length - 1\n            })\n        }\n    }\n\n\n    render() {\n        const {filters, packets, clickedItem, loading} = this.state\n        const filteredPackets = packets.filter(packet => {\n            // Layer Filter\n            if (filters.layer === \"Application\") {\n                if (packet.srcPort == null && packet.dstPort == null) {\n                    return false\n                }\n            } else if (filters.layer === \"Network\") {\n                if (packet.srcPort != null && packet.dstPort != null) {\n                    return false\n                }\n            }\n\n            // Protocol\n            if (filters.protocol !== \"All\" && filters.protocol !== packet.protocol) {\n                return false\n            }\n\n            // Ip Address\n            if (filters.sourceIp && (filters.ipVersion !== packet.ipVersion || filters.sourceIp !== packet.srcIp)) {\n                return false\n            }\n            if (filters.destinationIp && (filters.ipVersion !== packet.ipVersion || filters.destinationIp !== packet.dstIp)) {\n                return false\n            }\n\n            // Port Number\n            if (filters.sourcePort && (packet.srcPort == null || filters.sourcePort !== packet.srcPort.value.toString())) {\n                return false\n            }\n            if (filters.destinationPort && (packet.dstPort == null || filters.destinationPort !== packet.dstPort.value.toString())) {\n                return false\n            }\n            return true\n        })\n\n        return (\n            <div>\n                {loading ? <Spinner/> : null}\n                <InformationBox packets={filteredPackets}/>\n                <Filters setParentState={this.handleFiltersChanged}/>\n                <CustomizedTable packets={filteredPackets} onClick={(packet) => this.setState({clickedItem: packet})}/>\n                <ModalLayer handleClose={() => this.setState({clickedItem: null})} packet={clickedItem}/>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport Interfaces from \"../interfaces/Interfaces\";\nimport EachInterface from '../eachinterface/EachInterface'\nimport {Route} from 'react-router-dom';\n\nfunction Page() {\n    return (\n        <div>\n            <Route exact path='/' component={Interfaces}/>\n            <Route exact path='/EachInterface' component={EachInterface}/>\n        </div>\n    );\n}\n\nexport default Page;\n","import './App.css';\nimport Page from \"./component/page/Page\";\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div>\n        <Page />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}